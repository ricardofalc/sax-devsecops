name: CI/CD

on: push

jobs:
  lint:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8 linter
        run: flake8 --max-line-length=88 .

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ricardofalc/student-app:latest

  scan:
    name: Scan
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Docker Scout CVEs
        uses: docker/scout-action@v1.5.0
        with:
          command: cves
          image: ricardofalc/student-app:latest
          only-severities: critical
          ignore-base: false
          ignore-unchanged: false
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          exit-code: true
          exit-on: vulnerability

  test:
    needs: build
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: test
        run: |
          docker run -d -p 80:5000 hhmbroekman/student-app:latest
          sleep 10s
          curl http://localhost
          docker ps -aq | xargs docker stop | xargs docker rm

  Postman_testing:
    name: Automated API tests using Postman
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Postman
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "30360281-7cee6097-48c2-4227-8d83-b925b4f83b47"

  deploy:
    needs: [build, test]
    name: Deploy
    runs-on: self-hosted
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - run: |
          sudo kubectl delete deployment --all
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/deployment.yaml --force
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/nginx-service.yaml --force
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/network-policy.yaml --force
